##
## Velocity Template containing logout propagation machinery.
##
## Velocity context will contain the following properties
## flowExecutionUrl - the form action location
## flowRequestContext - the Spring Web Flow RequestContext
## flowExecutionKey - the SWF execution key (this is built into the flowExecutionUrl)
## profileRequestContext - root of context tree
## logoutContext - context with SPSession details for logout operation
## flowSelector - bean that maps an SPSession to a logout propagation flow
## multiRPContext - context with RelyingPartyContexts and possibly SP UI information from the metadata
## htmlEncoder - HTMLEncoder class
## urlEncoder - urlEncoder class
## codecUtil - CodecUtil class
## request - HttpServletRequest
## response - HttpServletResponse
## environment - Spring Environment object for property resolution
## custom - arbitrary object injected by deployer
##
## The <li> items are an enumeration of the relying parties among the sessions
## and are identified by an encoding of the name of the relying party.
##
## The iframes are bound to a single session and are associated back to the <li>
## element for the relying party of their session.
##
#parse("./include.vm")
#if ($logoutContext and !$logoutContext.getSessionMap().isEmpty())
<div class="row">
     <div class="col-xs-12 service-top">
         <p><span data-i18n="logout__uloskirjautunut">Olet kirjautunut ulos palvelusta</span><br />
            #if ($spDisplayNameFi || $spDisplayNameSv || $spDisplayNameEn)
                <span class="text-big" id="serviceDisplayName"></span>
            #end
            <span id="serviceDisplayNameFi" style="visibility: hidden">$spDisplayNameFi</span>
            <span id="serviceDisplayNameSv" style="visibility: hidden">$spDisplayNameSv</span>
            <span id="serviceDisplayNameEn" style="visibility: hidden">$spDisplayNameEn</span>
            <br />
         </p>
    </div>    
    <div class="col-xs-12 service-top">
        <p data-i18n="logout__uloskirjautunut_kaikista">Olet nyt kirjautunut ulos kaikista palveluista.</p>
    </div>
<div class="col-xs-12 col-md-10 col-lg-8">
    <div class="box box-solo">
        <table class="service-details">

            #foreach ($sp in $logoutContext.getSessionMap().keySet())
                #set ($rpCtx = $multiRPContext.getRelyingPartyContextById($sp))
                #if ($rpCtx)
                    #set ($rpUIContext = $rpCtx.getSubcontext("net.shibboleth.idp.ui.context.RelyingPartyUIContext"))
                #end
                <tr id="result_$codecUtil.hex($sp.getBytes())">
                    #if ($rpUIContext and $rpUIContext.getServiceName())
                        <td>$htmlEncoder.encodeForHTML($rpUIContext.getServiceName())</td>
                    #else
                        <td>$htmlEncoder.encodeForHTML($sp)</td>
                    #end
                    <td id="logging-item"><span class="logging-out" data-i18n="logout__sessiot__uloskirjautuminen__menossa">Kirjaudutaan ulos...</span></td>
                </tr>
            #end
        </table>
    </div>
</div>
</div>
<div class="row">
    <div class="col-xs-12 col-md-8">
        <button id="logout-button" class="disabled" disabled="true" onclick="window.location = '$flowExecutionUrl&_eventId=proceed'" data-i18n="logout__sessiot__uloskirjautuminen__menossa">
            Kirjaudutaan ulos...
        </button>
        <a href="javascript:void(0)" onclick="window.location = '$flowExecutionUrl&_eventId=proceed'">
            <span data-i18n="logout__palaa">Palaa palveluun</span>&nbsp;<span id="serviceDisplayNameReturn"></span>
        </a>
    </div>
</div>
<script src="/resources/js/vendor/jquery-1.11.2.min.js"></script>
<script>
    <!--

    function isLogoutFinished() {
        return $('span.logging-out').length == 0;
    }

    function check_status() {
        // Check every property of the object.
        for (flag in this) {
            if (!this[flag]) {
                return false;
            }
        }
        return true;
    }

    // Associative array keyed by SP name. Entries are an array keyed by session key.
    var sessionTracker = new Object();
        #foreach ($sp in $logoutContext.getSessionMap().keySet())
        spTracker = new Object();
        spTracker.status = check_status;
        sessionTracker['result_$codecUtil.hex($sp.getBytes())'] = spTracker;
        #end

    function onLoad(src, targetRow, trackerId, sessionKey) {
        try {
            var content = src.contents().text();
            if (content && jQuery.parseJSON(content).result == "Success") {
                sessionTracker[trackerId]['_' + sessionKey] = true;
            } else {
                sessionTracker[trackerId]['_' + sessionKey] = false;
            }
        } catch (e) {
            sessionTracker[trackerId]['_' + sessionKey] = false;
        }
        targetRow.removeClass("success failure");
        if (sessionTracker[trackerId].status()) {
            $(targetRow).find("#logging-item span").removeClass("logging-out");
            $(targetRow).find("#logging-item span").addClass("logged-out").text(idpLocalisation.translate("logout__sessiot__uloskirjautuminen__valmis"));
            targetRow.addClass("service-logged-out");
        } else {
            // handle failure
        }
        if (typeof(Storage) !== "undefined") {
            var url = sessionStorage.getItem(sessionKey);
            if (url != null) {
                sessionStorage.removeItem(sessionKey);
                setTimeout(function () {
                    src.prop("src", url)
                }, 1500);
            }
        }
        if (isLogoutFinished()) {
            $('#logout-button').prop("disabled", false);
            $('#logout-button').removeClass("disabled");
            $('#logout-button').hide();
            $('#reject-link').show();
        } else {
            $('#reject-link').hide();
        }
    }
    // -->
</script>
    #foreach ($entry in $logoutContext.getKeyedSessionMap().entrySet())
        #if ($flowSelector.apply($entry.getValue()))
            #set ($trackerId = "result_$codecUtil.hex($entry.getValue().getId().getBytes())")
        <iframe id="sender_$codecUtil.hex($entry.getKey().getBytes())"
                src="$request.contextPath/profile/PropagateLogout?SessionKey=$urlEncoder.encode($entry.getKey())"
                style="display:none"
                onload="onLoad($(this), $('#$trackerId'), '$trackerId', '$entry.getKey()')"></iframe>
        #end
    #end
#end
